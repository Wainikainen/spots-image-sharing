!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__form-save",inactiveButtonClass:"modal__form-save_disabled",inputErrorClass:"modal__form-error",errorClass:"modal__form-error_visible"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);o.textContent="",o.classList.remove(r.errorClass)},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},a=(e,r,o)=>{r.forEach(r=>{t(e,r,o)})},n=e=>{document.querySelectorAll(e.formSelector).forEach(o=>{((e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),n=e.querySelector(o.submitButtonSelector);r(a,n,o),a.forEach(s=>{s.addEventListener("input",function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const a=e.querySelector(`#${t.id}-error`);a.textContent=r,a.classList.add(o.errorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(a,n,o)})})})(o,e)})};n(e);const s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse).catch(console.error)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse).catch(console.error)}getSiteInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()]).then(function([e,t]){return{userInfo:t,cards:e}}).catch(console.error)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleServerResponse).catch(console.error)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse).catch(console.error)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({name:e,about:t})}).then(this._handleServerResponse).catch(console.error)}editUserAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({avatar:e})}).then(this._handleServerResponse).catch(console.error)}createCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({name:e,link:t})}).then(this._handleServerResponse).catch(console.error)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse).catch(console.error)}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"75e9bfca-7947-47ee-85a7-3709ecf46b79","Content-Type":"application/json"}});s.getSiteInfo().then(({userInfo:e,cards:t})=>{p.textContent=e.name,y.textContent=e.about,c.src=e.avatar,t.forEach(e=>{const t=G(e);L.prepend(t)})}).catch(console.error);const c=document.querySelector(".profile__pic"),l=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__post-button"),d=document.querySelector("#edit-profile-modal"),u=document.querySelector("#new-post-modal"),m=d.querySelector(".modal__exit"),h=u.querySelector(".modal__exit"),_=d.querySelector(".modal__form"),v=d.querySelector("#profile-name-input"),f=d.querySelector("#profile-description-input"),p=document.querySelector(".profile__name"),y=document.querySelector(".profile__description"),S=u.querySelector(".modal__form"),b=u.querySelector("#image-link-input"),E=u.querySelector("#caption-link-input"),q=document.querySelector("#card-template"),L=document.querySelector(".cards__list"),k=document.querySelector("#modal-image"),C=k.querySelector(".modal__image"),g=k.querySelector(".modal__image-title"),U=k.querySelector(".modal__image-close"),I=S.querySelector(".modal__form-save"),$=document.querySelectorAll(".modal"),x=document.getElementById("delete-modal"),B=document.getElementById("cancel-button"),R=document.getElementById("delete-form"),A=document.getElementById("avatar-modal"),T=document.querySelector(".profile__pic-btn"),D=document.getElementById("avatar-form"),j=document.getElementById("avatar-link"),w=A.querySelector(".modal__exit"),P=document.getElementById("avatar-file-input"),N=D.querySelector(".modal__file-button"),O=D.querySelector(".modal__form-save"),J=e=>{e.classList.add("modal_is-opened"),document.addEventListener("keydown",z)},H=e=>{e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",z)},z=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");e&&H(e)}};let F,M;$.forEach(e=>{e.addEventListener("mousedown",t=>{if(t.target===e){H(e);const t=e.querySelector("form");t&&t.reset()}})}),U.addEventListener("click",()=>H(k));const G=e=>{const t=q.content.cloneNode(!0),r=t.querySelector(".card"),o=t.querySelector(".card__title"),a=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),c=t.querySelector(".card__delete-button");return a.src=e.link,a.alt=e.name,o.textContent=e.name,e.isLiked?n.classList.add("card__like-button_is-active"):n.classList.remove("card__like-button_is-active"),n.addEventListener("click",()=>{n.classList.contains("card__like-button_is-active")?s.removeLike(e._id).then(()=>{n.classList.remove("card__like-button_is-active")}).catch(console.error):s.addLike(e._id).then(()=>{n.classList.add("card__like-button_is-active")}).catch(console.error)}),c.addEventListener("click",()=>{F=r,M=e._id,J(x)}),R.addEventListener("submit",e=>{e.preventDefault(),s.deleteCard(M).then(()=>{F.remove(),H(x)}).catch(console.error)}),B.addEventListener("click",()=>H(x)),a.addEventListener("click",()=>{C.src=e.link,C.alt=e.name,g.textContent=e.name,J(k)}),t};l.addEventListener("click",()=>{a(_,[v,f],e),J(d),v.value=p.textContent,f.value=y.textContent}),i.addEventListener("click",()=>{J(u),a(S,[E,b],e)}),m.addEventListener("click",()=>{H(d),_.reset()}),h.addEventListener("click",()=>{H(u),S.reset()}),T.addEventListener("click",()=>{J(A),a(D,[j],e)}),w.addEventListener("click",()=>{H(A),D.reset()}),N.addEventListener("click",()=>{P.click()}),D.addEventListener("submit",e=>{e.preventDefault(),O.disabled=!0;const t=P.files[0],r=j.value;if(t){const e=new FileReader;e.onload=()=>{const t=e.result;s.editUserAvatar({avatar:t}).then(e=>{c.src=e.avatar,H(A),D.reset()}).catch(console.error)},e.readAsDataURL(t)}else r&&s.editUserAvatar({avatar:r}).then(e=>{c.src=e.avatar,H(A),D.reset(),O.disabled=!1}).catch(console.error)}),_.addEventListener("submit",e=>{e.preventDefault();const t=v.value,r=f.value;s.editUserInfo({name:t,about:r}).then(e=>{p.textContent=e.name,y.textContent=e.about,H(d),_.reset()}).catch(console.error)}),S.addEventListener("submit",t=>{t.preventDefault();const r=E.value,a=b.value;s.createCard({name:r,link:a}).then(t=>{const r=G(t);L.prepend(r),S.reset(),o(I,e),H(u)}).catch(console.error)}),n(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,